-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on GitHub at
--   <a>https://github.com/githubuser/myFancyproject#readme</a>
@package myFancyproject
@version 0.1.0.0

module Life

-- | Cell are the coordinates of an cell inside the grid, the name is
--   missleading but this AliveCell can also be a dead cell
type AliveCell = (Int, Int)

-- | Grid is the grid of all cells, alive or dead.
type Grid = [AliveCell]

-- | Function to see if the current living cell has a neighbour and return
--   the copied location of it.
neighbours :: AliveCell -> Grid

-- | Function for making a new evolution.
step :: Grid -> Grid

-- | Couting Occurences of alive cells around the currently selected cell.
countingOccurences :: Ord a => [a] -> [(a, Int)]

-- | Function to format the entire grid and make sort of an UI.
formatGrid :: Grid -> String

-- | Function to print the entire grid | print the grid after being
--   formatted
printGrid :: Grid -> IO ()

-- | Main function to set everything in motion ammount of evolutions is
--   declared here
ui :: IO ()
